worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 8192;
    server_tokens off;
    server_name_in_redirect off;
    default_type application/octet-stream;
    client_max_body_size 500M;

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost;

        add_header Strict-Transport-Security "max-age=31536000" always;

        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";
        ssl_stapling on;
        ssl_stapling_verify on;

        resolver 8.8.8.8 8.8.4.4;

        ssl_certificate /etc/nginx/root-ca.pem;
        ssl_certificate_key /etc/nginx/root-ca.key;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location /health {
            include cors.conf;
            access_log off;
            return 200 "OK\n";
        }

        location ~ ^/cms/(?<service>[^/]+)(?<subpath>/.*)?$ {
            include cors.conf;
            resolver 127.0.0.11 valid=30s;
            set $upstream $service:8000;

            # FIXME: Access web interfaces (e.g. Grafana, MLflow) through subpaths on the proxy.
            # The following services only work when accessed directly through their respective APIs.
            # Attempting to access their UI through the proxy leads to issues due to the way they
            # handle redirects (even though we can employ certain heuristics to rewrite local URLs
            # we can't account for all possible cases, e.g. local paths in HTML responses). As a
            # result, accessing these web intercases through the proxy is only possible using the
            # available host port mappings instead of the subpaths under /cms for the time being.
            if ($service = "grafana") {
                set $upstream $service:3000;
            }

            if ($service = "graylog") {
                set $upstream $service:9000;
            }

            if ($service = "minio") {
                set $upstream $service:9001;
            }

            if ($service = "mlflow-ui") {
                set $upstream $service:5000;
            }

            if ($service = "prometheus") {
                set $upstream $service:9090;
            }

            proxy_pass http://$upstream$subpath;

            proxy_redirect http://$upstream$subpath $scheme://$host/cms/$service$subpath;
            proxy_redirect http://$upstream/ $scheme://$host/cms/$service/;
            proxy_redirect http://$upstream $scheme://$host/cms/$service;
            proxy_redirect / $scheme://$host/cms/$service/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            error_page 502 503 504 = @fallback;
        }

        location @fallback {
            return 503 "Service is temporarily unavailable. Please try again later.";
        }
    }

    include sites-enabled/*;
}
