version: "3.6"

services:

  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: cms_prometheus
    restart: always
    networks:
      - cogstack-model-serve_cms
    volumes:
      - ./docker/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/monitoring/prometheus/alert.rules:/etc/prometheus/alert.rules
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=1y"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    expose:
      - 9090
#    ports:
#      - 8201:9090
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:9090", "&>", "/dev/null" ]
      interval: 60s
      timeout: 20s
      retries: 3

  grafana:
    image: grafana/grafana:9.3.2-ubuntu
    container_name: cms_grafana
    restart: always
    networks:
      - cogstack-model-serve_cms
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./docker/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./docker/monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana
    expose:
      - 3000
#    ports:
#      - 8202:3000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/healthz" ]
      interval: 60s
      timeout: 20s
      retries: 3

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: cms_alertmanager
    restart: always
    networks:
      - cogstack-model-serve_cms
    volumes:
      - ./docker/monitoring/prometheus/alertmanager.yml:/etc/alertmanager/config.yml
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    expose:
      - 9093
#    ports:
#      - 8203:9093
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:9093/-/ready", "&>", "/dev/null" ]
      interval: 60s
      timeout: 20s
      retries: 3

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cms_cadvisor
    restart: always
    networks:
      - cogstack-model-serve_cms
    expose:
      - 8080
#    ports:
#      - 8204:8080
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - "--enable_metrics=cpu,percpu,memory,network"
      - "--store_container_labels=true"
      - "--docker_only=true"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/healthz", "&>", "/dev/null" ]
      interval: 60s
      timeout: 20s
      retries: 3

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  cogstack-model-serve_cms:
    external: true